# Задача 30:  Заполните массив элементами арифметической прогрессии. 
# Её первый элемент, разность и количество элементов нужно ввести с клавиатуры. 
# Формула для получения n-го члена прогрессии: a[n] = a[1] + (n-1) * d.
# Каждое число вводится с новой строки.
# Ввод:             Вывод:
# 7 2 5             7 9 11 13 15

a = int(input('Введите значение первого элемента прогресси: '))
d = int(input('Введите значение шага арифм. прогрессии: '))
n = int(input('Введите количество элементов арифм. прогрессии: '))
# an = []

# def arifm_progr(a, d, n):
#     for i in  range(1, n + 1):
#        an.append(a + (i-1)*d)

#     return an

# print(*arifm_progr(a, d, n))

# ------------------------------------------------------------------------------------------------
# разбор на семинаре (входные условия из первого решения)

# arr = list(range(a, a + n * d, d))
# print(*arr)

# ------------------------------------------------------------------------------------------------
# разбор на семинаре через рекурсию (входные условия из первого решения)

# def arifm_progr(a, d, n):
#     if n > 0:
#         print(a, end=' ')
#         arifm_progr(a+d, d, n-1)

# arifm_progr(a, d, n)

# ------------------------------------------------------------------------------------------------
# решение от преподавателя через рекурсию (входные условия из первого решения)
# по условиям задачи мы должны вернуть все элементы списком

def func(a, d, n):
    if n == 1:                      # если колличество элементов равно 1, то
        return [a]                  # функция возвращает список с первым исходным элементом
    # next = func(a, d, n - 1)        # следующий элемент 
    # return next + [next[-1] + d]    # тут возвращаем следующий элемент прибавляя к нему каждый раз последний элемент списка + "d"
    
    return (next := func(a, d, n - 1)) + [next[-1] + d] # моржовый оператор, взамен предыдущих двух строк

print(*func(a, d, n))    